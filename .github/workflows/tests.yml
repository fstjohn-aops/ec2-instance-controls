name: Tests

on: 
  push:
    branches:
      - main
      #FILLME: Add any other branches you want to trigger the test workflow on
  pull_request:

jobs:
  build-with-docker:
    uses: aops-ba/gha-shared/.github/workflows/build-with-docker.yml@main
    with:
      ci-env-path: server/.env.ci
      project-env-path: server/.env
    secrets: inherit
  build-nextjs:
    name: Run NextJS Tests
    runs-on: ubuntu-latest
    needs: build-with-docker
    steps:
      - name: Configure AWS credentials and Login to Amazon ECR
        uses: aops-ba/gha-shared/setup-aws-trove@v1
        with:
          secret-ci-aws-access-key-id: ${{ secrets.CI_TROVE_AWS_ACCESS_KEY_ID }}
          secret-ci-aws-secret-access-key: ${{ secrets.CI_TROVE_AWS_SECRET_ACCESS_KEY }}
      - uses: actions/checkout@v2
      - run: |
          docker pull ${{ needs.build-with-docker.outputs.ecr-tag }}
          docker run ${{ needs.build-with-docker.outputs.ecr-tag }} sh /app/docker_node_ci_nextjs.sh
  build-server:
    name: Run Server Tests
    runs-on: ubuntu-latest
    needs: build-with-docker
    steps:
      - name: Configure AWS credentials and Login to Amazon ECR
        uses: aops-ba/gha-shared/setup-aws-trove@v1
        with:
          secret-ci-aws-access-key-id: ${{ secrets.CI_TROVE_AWS_ACCESS_KEY_ID }}
          secret-ci-aws-secret-access-key: ${{ secrets.CI_TROVE_AWS_SECRET_ACCESS_KEY }}
      - uses: actions/checkout@v2
      - run: |
          docker pull ${{needs.build-with-docker.outputs.ecr-tag}}
          cp server/.env.ci server/.env
          cd server && docker compose up -d
          docker run --network=server_standard ${{needs.build-with-docker.outputs.ecr-tag}} sh /app/docker_node_ci_server.sh
  build-codegen:
    name: Run Codegen Tests
    runs-on: ubuntu-latest
    needs: build-with-docker
    steps:
      - name: Configure AWS credentials and Login to Amazon ECR
        uses: aops-ba/gha-shared/setup-aws-trove@v1
        with:
          secret-ci-aws-access-key-id: ${{ secrets.CI_TROVE_AWS_ACCESS_KEY_ID }}
          secret-ci-aws-secret-access-key: ${{ secrets.CI_TROVE_AWS_SECRET_ACCESS_KEY }}
      - uses: actions/checkout@v2
      - run: |
          docker pull ${{needs.build-with-docker.outputs.ecr-tag}}
          cp server/.env.ci server/.env
          cd server && docker compose up -d
          docker run --network=server_standard ${{needs.build-with-docker.outputs.ecr-tag}} sh /app/docker_node_ci_codegen.sh