name: Main CI/CD

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

env:
  REGISTRY: cr.aops.tools/aops-docker-repo
  IMAGE_NAME: ec2-instance-controls
  K8S_NAMESPACE: ec2-slack-bot
  K8S_RESOURCE_TYPE: deployment
  K8S_RESOURCE_NAME: ec2-slack-bot
  K8S_CONTAINER_NAME: ec2-slack-bot

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: default
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run test.sh
        run: PYTHONPATH=src bash test.sh

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: default
    needs: [test]
    outputs:
      image_tag: ${{ steps.image_meta.outputs.image_tag }}
      image_ref: ${{ steps.image_meta.outputs.image_ref }}
      latest_ref: ${{ steps.image_meta.outputs.latest_ref }}
      image_uri: ${{ steps.image_meta.outputs.image_uri }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get short commit hash
        id: vars
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: cr.aops.tools
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64
      - name: Set image outputs
        id: image_meta
        run: |
          echo "image_tag=${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
          echo "image_ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
          echo "latest_ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          echo "image_uri=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
          echo "::notice title=Image URI::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"
          {
            echo "Docker image pushed (copyable URI):"
            echo ""
            echo '```'
            echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"
            echo '```'
            echo ""
            echo "Also pushed:"
            echo ""
            echo '```'
            echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            echo '```'
          } >> $GITHUB_STEP_SUMMARY 