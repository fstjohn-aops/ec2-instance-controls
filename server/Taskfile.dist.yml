# https://taskfile.dev

version: '3'

includes:
  util:
    taskfile: ../Taskfile.util.yml
    internal: true

vars:
  STORYBOOK_PORT: 6006
  PRETTIER_GLOB: "{src,test,tools}/**/*.{js,jsx,ts,tsx,css,scss,json}"

tasks:
  default:
    desc: List available tasks.
    aliases: [ls, list]
    silent: true
    cmds:
      - task: util:list

  ######################## 🔧 DEV COMMANDS 🔧 ########################
  ################# 🔧 Commands you'll use OFTEN. 🔧 #################

  install:
    desc: Install server dependencies.
    aliases: [i]
    deps: [util:trove-configure-codeartifact]
    sources:
      - ./package*.json
    generates:
      - ./node_modules/**/*
    cmds:
      # Ignore confusing pre/post install scripts in package.json
      - npm install --ignore-scripts

  dev:
    desc: Build, watch, and run the server.
    aliases: [watch, w, dev-server]
    deps: [docker-up]
    cmds:
      - npx tsx watch src/main.ts

  ######################### 🔧 custom tasks 🔧 ########################

  # Add any custom DEV COMMANDS tasks here.

  ######################## 📦 INSTALL/BUILD 📦 #######################
  ############## 📦 Commands for creating the server. 📦 #############

  build:
    summary: Build the server code.
    aliases: [b, ts-build]
    cmds:
      - npx tsc -p tsconfig.build.json
      - task: copy-src

  start:
    summary: Start the server.
    cmds:
      - node tsout/main.js

  start-worker:
    summary: Start the server in worker mode.
    cmds:
      - node tsout/main.js --worker

  copy-src:
    summary: Copy the server source code to the build directory.
    cmds:
      - npx copyfiles -u 1 -e "src/**/*.ts" -e "src/**/*.js" "src/**/*" tsout

  ######################### 📦 custom tasks 📦 ########################

  # Add any custom INSTALL/BUILD tasks here.

  ########################### 🧹 LINTING 🧹 ###########################
  ######## 🧹 Commands for checking and cleaning the code. 🧹 #########

  check:
    desc: Check the server code.
    aliases: [c]
    # Runs all checks in parallel.
    deps: [format-check, lint, ts-check, test]

  format:
    summary: Prettify the server code.
    aliases: [p, pretty, pretty-all]
    cmds:
      - npx prettier "{{.PRETTIER_GLOB}}" --write

  format-check:
    summary: Check the server code for prettier violations.
    aliases: [pretty-check]
    cmds:
      - npx prettier "{{.PRETTIER_GLOB}}" --check

  lint:
    summary: Lint the server code.
    cmds:
      - npx eslint --cache "{src,test,tools}/**/*.{js,jsx,ts,tsx}"

  ts-check:
    summary: Type check the server code.
    aliases: [ts, tsc]
    cmds:
      - npx tsc

  ######################### 🧹 custom tasks 🧹 ########################

  # Add any custom LINTING tasks here.

  ########################### 🧪 TESTING 🧪 ###########################
  ################# 🧪 Commands for running tests. 🧪 #################

  test:
    desc: Run all server tests.
    deps: [reset-db-test]
    cmds:
      - npx jest

  ######################### 🧪 custom tasks 🧪 ########################

  # Add any custom TESTING tasks here.

  ########################### 🧰 UTILITY 🧰 ###########################
  ############### 🧰 Commands you'll use SOMETIMES. 🧰 ################

  docker:
    summary: Start the Docker containers.
    aliases: [docker-up]
    cmds:
      - docker compose up -d

  docker-down:
    summary: Stop the Docker containers.
    cmds:
      - docker compose down

  ######################### 🧰 custom tasks 🧰 ########################

  # Add any custom UTILITY tasks here.

  ########################## 🗄️ DATABASE 🗄️ ###########################
  ############## 🗄️ Commands for database operations. 🗄️ ##############

  reset-db:
    desc: Reset the main database.
    summary: |
      Reset the main database via rolling back all migrations, migrating, and
      adding seeds.  Also generates TypeScript types from the database schema.
    cmds:
      - task: rollback
        vars:
          DB_ENV: main
      - task: migrate
      - task: seed
        vars:
          DB_ENV: main

  migrate:
    summary: |
      Run migrations on the main database and (re)generate TypeScript types from
      the database schema.
    aliases: [migrate-all, migrate-types]
    cmds:
      - task: migrate-direct
        vars:
          DB_ENV: main
      - task: gen-db-ts

  migrate-direct:
    summary: Run database migrations without generating types.
    vars:
      DB_ENV: "{{.DB_ENV | default \"main\"}}"
    cmds:
      - npx knex migrate:latest --env {{.DB_ENV}}

  rollback:
    summary: Rollback database migrations.
    vars:
      DB_ENV: "{{.DB_ENV | default \"main\"}}"
    cmds:
      - npx knex migrate:rollback --env {{.DB_ENV}}

  seed:
    summary: Seed the database.
    vars:
      DB_ENV: "{{.DB_ENV | default \"main\"}}"
    cmds:
      - npx knex seed:run --env {{.DB_ENV}}

  reset-db-test:
    summary: Reset the test database.
    cmds:
      - task: rollback
        vars:
          DB_ENV: test
      - task: migrate-direct
        vars:
          DB_ENV: test
      - task: seed
        vars:
          DB_ENV: test

  ######################### 🗄️ custom tasks 🗄️ ########################

  # Add any custom DATABASE tasks here.

  ########################## ⚙️ CODEGEN ⚙️ ############################
  ############## ⚙️ Commands for generating code. ⚙️ ##################

  gen-all:
    desc: Run all code generation tasks.
    aliases: [gen]
    cmds:
      - task: gen-db-ts
      - task: gen-bulk-imports
      - task: gen-sync-shared  # This may need to run last.

  gen-db-ts:
    summary: Generate TypeScript types from database schema.
    cmds:
      - npx tsx tools/genTsKnex.ts

  gen-bulk-imports:
    summary: Generate bulk imports.
    watch: true  # only works when run directly from CLI with --watch
    sources:
      - ./src/init/RouteList.ts
      - ./tools/genBulkImports.ts
    cmds:
      - npx tsx tools/genBulkImports.ts

  gen-sync-shared:
    summary: Sync shared code between client and server.
    watch: true  # only works when run directly from CLI with --watch
    sources:
      - ../client/src/shared/**/*
      - ./tools/syncDirs.ts
    cmds:
      - npx tsx tools/syncDirs.ts --json sync_dirs_config.json

  ######################### ⚙️ custom tasks ⚙️ ########################

  # Add any custom CODEGEN tasks here.
